JS "Blog Application"

Legend: 
'-' => "not done", '*' => "currently doing", 'x' => "complete", '!' => "complete, but not TDD"

Minimum Marketable Feature:
- list all blog posts (showing concatenated text)
	- fetch all blog posts from the server
	- display all posts (full) in a single page
	- concatenate post text when showing in full list
- inline editing for blog posts from within full list view
- support for tagging posts
- show "tag cloud" - list all existing tags, and number of posts per tag
- ability to filter visible posts by tag
- alerts should be displayed for: success confirmations and errors

x create a new post
x view individual blog post
x inline editing for blog posts from within single post view

User Stories:
- Create router to switch between:
	- new post form
	- individual post
	- list of posts

x able to programmatically save post to server
x validate for required fields before sending to server
x HTML form to allow for entering fields for server
x Submitting form will save underlying model to server
x When rendering a post view with a "non-new" post, should display it normally (no form)
x In single post view, able to edit any 'editable' field by clicking an icon next to it

Tests:
! "submitPost" method should update all the model values from the form fields.

x Model initialization
x Model default values
x Save model to server
	x Change 'body' field to 'text' field before sending 
	x Sets the "created" + "modified" attributes to current time before sending to the server
	x Sets the "author" attribute to "Anonymous" if none specified
x Model validation
	x Required: title, body
x URL set on model corresponds to REST server route 
x Rendered View for a new Post model has HTML fields for all the editable attributes
x "submitPost" method should trigger the post to be saved to the server
x clicking "Submit Post" button should trigger "submitPost" method
x Rendering view with a model fetched from server should not render a form but rather display ALL the fields in appropriate markup
x All editable fields have a "edit icon" (like a pencil?) next to them
x Clicking edit image transforms area into input field
x Pressing enter or removing focus from inline editable element should:
	x save it to model
	x change editable field back to its original form 
x "Save Changes" button appears disabled on single post view until the model changes
x Edits made on a page can be saved to the server by pressing "Save Changes" button
x The "Updated: ..." label should be refreshed when changes are saved